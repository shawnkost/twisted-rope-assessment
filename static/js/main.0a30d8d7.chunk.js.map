{"version":3,"sources":["img/8ball.png","components/Form.js","components/Modal.js","App.jsx","index.jsx"],"names":["Form","props","useState","question","setQuestion","errMsg","setErrMsg","grabResults","event","a","preventDefault","substr","loading","params","encodeURIComponent","uri","fetch","fetchRequest","json","results","magic","onSubmit","data-testid","className","htmlFor","type","id","placeholder","onChange","target","value","required","Modal","allResults","map","response","index","answer","mapResponses","length","onClick","clear","toggle","App","loader","setLoader","setResults","setAllResults","toggleModal","setToggleModal","viewPastResponses","src","magic8Ball","alt","pop","arr","ReactDOM","render","document","getElementById"],"mappings":"8MAAe,G,MAAA,IAA0B,mC,8BCE1B,SAASA,EAAKC,GAAQ,IAAD,EACFC,mBAAS,IADP,mBAC3BC,EAD2B,KACjBC,EADiB,OAENF,mBAAS,IAFH,mBAE3BG,EAF2B,KAEnBC,EAFmB,KAS5BC,EAAW,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,yDAClBD,EAAME,iBACNJ,EAAU,IACkB,MAAxBH,EAASQ,QAAQ,GAHH,iCAKdV,EAAMW,SAAQ,GACVC,EAASC,mBAAmB,GAAD,OAAIX,IAC/BY,EAAM,0CAA4CF,EAPxC,SAQaG,MAAMD,GARnB,cAQRE,EARQ,iBASQA,EAAaC,OATrB,QASRC,EATQ,OAUdlB,EAAMkB,QAAQA,EAAQC,OACtBnB,EAAMW,SAAQ,GACdR,EAAY,IAZE,kDAcdE,EAAU,sBAdI,gCAiBhBA,EAAU,mEAjBM,0DAAH,sDAqBjB,OACE,sBAAMe,SAAUd,EAAae,cAAY,OAAzC,SACE,sBAAKC,UAAU,cAAf,UACE,uBAAOC,QAAQ,WAAf,SACE,uBACEC,KAAK,OACLC,GAAG,WACHC,YAAY,yBACZJ,UAAU,sBACVK,SAnCW,SAAApB,GACnBJ,EAAYI,EAAMqB,OAAOC,QAmCjBA,MAAO3B,EACP4B,UAAQ,MAGX1B,GAAU,sBAAKkB,UAAU,cAAf,cAA+BlB,EAA/B,OACX,8BACE,wBAAQoB,KAAK,SAASF,UAAU,UAAhC,yCC9CK,SAASS,EAAM/B,GA2B5B,OACE,mCACE,sBAAKsB,UAAU,gBAAf,UACE,kCACE,gCACE,+BACE,0CACA,6CAGJ,gCAxBa,WACnB,GAAItB,EAAMgC,WASR,OARmBhC,EAAMgC,WAAWC,KAAI,SAACC,EAAUC,GACjD,OACE,+BACE,oBAAIb,UAAU,iBAAd,SAAgCY,EAAShC,WACzC,oBAAIoB,UAAU,eAAd,SAA8BY,EAASE,WAFhCD,MAoBDE,QAEV,8BAEGrC,EAAMgC,WAAWM,OAAS,GAAM,wBAAQhB,UAAU,UAAUiB,QAjC9C,WACrBvC,EAAMwC,SAgCiC,+BAEnC,8BACE,wBAAQlB,UAAU,UAAUiB,QAzChB,WAClBvC,EAAMyC,UAwCA,yBCiBKC,MAzDf,WAAgB,IAAD,EACezC,oBAAS,GADxB,mBACN0C,EADM,KACEC,EADF,OAEiB3C,mBAAS,IAF1B,mBAENiB,EAFM,KAEG2B,EAFH,OAGuB5C,mBAAS,IAHhC,mBAGN+B,EAHM,KAGMc,EAHN,OAIyB7C,oBAAS,GAJlC,mBAIN8C,EAJM,KAIOC,EAJP,KAOPC,EAAoB,WACxBD,GAAgBD,IAyBlB,OACE,sBAAKzB,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,0BACA,qBAAKA,UAAU,uBAAf,SAEE,qBACE4B,IAAKC,EACLC,IAAI,eACJ9B,UAAWqB,EAAS,uBAAyB,qBAGjD,qBAAKrB,UAAU,iBAAf,SAAiCJ,IACjC,cAACnB,EAAD,CAAMmB,QA5BQ,SAACW,IACjBgB,EAAWhB,EAAMO,QACbJ,EAAWM,QAAU,GACvBQ,GAAc,SAACd,GAAD,OAAiBH,GAAjB,mBAA2BG,QAE7BA,EACRqB,MACJP,GAAc,SAACQ,GAAD,OAAUzB,GAAV,mBAAoByB,SAqBR3C,QAhBT,SAACkB,GACpBe,EAAUf,MAgBR,gCACE,wBAAQU,QAASU,EAAmB3B,UAAU,UAA9C,mCAICyB,GAAgB,cAAChB,EAAD,CAAOU,OAAQQ,EAAmBjB,WAAYA,EAAYQ,MAvC1D,WACrBM,EAAc,cCflBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0a30d8d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/8ball.ce434eb1.png\";","import React, { useState } from \"react\";\n\nexport default function Form(props) {\n  const [question, setQuestion] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n\n  const handleChange = event => {\n    setQuestion(event.target.value);\n  }\n\n  //check for question mark and make fetch request, otherwise throw error\n  const grabResults = async event => {\n    event.preventDefault();\n    setErrMsg(\"\");\n    if (question.substr(-1) === \"?\") {\n      try {\n        props.loading(true);\n        let params = encodeURIComponent(`${question}`);\n        let uri = \"https://8ball.delegator.com/magic/JSON/\" + params;\n        const fetchRequest = await fetch(uri);\n        const results = await fetchRequest.json();\n        props.results(results.magic);\n        props.loading(false);\n        setQuestion(\"\");\n      } catch {\n        setErrMsg(\"The request failed\");\n      }\n    } else {\n      setErrMsg(\"You need to include a question mark at the end of your question\");\n    }\n  };\n\n  return (\n    <form onSubmit={grabResults} data-testid=\"form\">\n      <div className=\"text-center\">\n        <label htmlFor=\"question\">\n          <input\n            type=\"text\"\n            id=\"question\"\n            placeholder=\"What is your question?\"\n            className=\"text-center font-20\"\n            onChange={handleChange}\n            value={question}\n            required\n          ></input>\n        </label>\n        {errMsg && <div className=\"err font-20\"> {errMsg} </div>}\n        <div>\n          <button type=\"submit\" className=\"font-20\">\n            Ask the Magic 8-Ball\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\n\nexport default function Modal(props) {\n\n  // calling the toggle function in App component to update state\n  const handleClick = () => {\n    props.toggle();\n  };\n\n  // calling the clear function in App component to update state\n  const clearResponses = () => {\n    props.clear();\n  };\n\n  //map over allResults array from App component\n  const mapResponses = () => {\n    if (props.allResults) {\n      const mapResults = props.allResults.map((response, index) => {\n        return (\n          <tr key={index}>\n            <td className=\"table-question\">{response.question}</td>\n            <td className=\"table-answer\">{response.answer}</td>\n          </tr>\n        );\n      });\n      return mapResults;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"modal font-20\">\n        <table>\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Answer</th>\n            </tr>\n          </thead>\n          <tbody>{mapResponses()}</tbody>\n        </table>\n        <div>\n          {/* The clear responses button only renders if the user has asked questions previously */}\n          {props.allResults.length > 0 && (<button className=\"font-20\" onClick={clearResponses}>Clear Responses</button>)}\n        </div>\n        <div>\n          <button className=\"font-20\" onClick={handleClick}>\n            Exit\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport magic8Ball from \"./img/8ball.png\";\nimport Form from \"./components/Form\";\nimport Modal from \"./components/Modal\";\n\nfunction App() {\n  const [loader, setLoader] = useState(false);\n  const [results, setResults] = useState([]);\n  const [allResults, setAllResults] = useState([]);\n  const [toggleModal, setToggleModal] = useState(false);\n\n  //toggles modal with past 10 responses\n  const viewPastResponses = () => {\n    setToggleModal(!toggleModal);\n  };\n\n  //clear allResults arr\n  const clearResponses = () => {\n    setAllResults([]);\n  }\n\n  //adds to state arr if there is 10 values or less, otherwise we remove the last element and push\n  const grabValue = (value) => {\n    setResults(value.answer);\n    if (allResults.length <= 9) {\n      setAllResults((allResults) => [value, ...allResults]);\n    } else {\n      const arr = allResults;\n      arr.pop();\n      setAllResults((arr) => [value, ...arr]);\n    }\n  };\n\n  //gets called in Form component with either true/false to trigger keyframe animation\n  const updateLoader = (value) => {\n    setLoader(value);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"font-60\">Magic 8-Ball</h1>\n      <div className=\"eight-ball-container\">\n        {/* 8-ball img gets a class of shake to trigger animation if loader is true */}\n        <img\n          src={magic8Ball}\n          alt=\"magic 8-ball\"\n          className={loader ? \"shake eight-ball-img\" : \"eight-ball-img\"}\n        ></img>\n      </div>\n      <div className=\"font-20 answer\">{results}</div>\n      <Form results={grabValue} loading={updateLoader} />\n      <div>\n        <button onClick={viewPastResponses} className=\"font-20\">\n          View previous results\n        </button>\n        {/* only render the modal when view previous results button is clicked */}\n        {toggleModal && (<Modal toggle={viewPastResponses} allResults={allResults} clear={clearResponses} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}